@using System.Text.Encodings.Web
@using Humanizer
@using Microsoft.AspNetCore.Http.Extensions
@model IFS.Web.Core.Upload.UploadedFile
@{
    ViewBag.Title = $"Download started: {Model!.Metadata.OriginalFileName}";
}

@{
    string downloadLink = this.Url.RouteUrl("DownloadFileRaw", new { id = Model.Id }, this.Context.Request.Scheme)!;
    var size = Model.Size.Bytes();

    string directDownloadUrl = Model.IsPasswordProtected ? this.Context.Request.GetDisplayUrl() : downloadLink;
}

<ifs-page-title>@ViewBag.Title</ifs-page-title>

<p>
    You are now downloading a file uploaded for you: <code>@Model.Metadata.OriginalFileName</code>. The file size is about @size.LargestWholeNumberValue.ToString("F0") @size.LargestWholeNumberSymbol.
</p>

@if (Model.Metadata.Sender != null) {
    string? name = String.IsNullOrEmpty(Model.Metadata.Sender!.Name) ? Model.Metadata.Sender!.EmailAddress : Model.Metadata.Sender!.Name;
    bool nameOnly = !String.IsNullOrEmpty(Model.Metadata.Sender.EmailAddress);

    <p>
        The file you are downloaded has been uploaded by

        @if (nameOnly) {
            @name
        } else {
            <a href="mailto:@Model.Metadata.Sender.EmailAddress">@name</a>
        }.
    </p>
}

<p class="alert alert-info" id="downloadLinkContainer">
    <strong>Notice</strong> If the download does not start, please <a href="@directDownloadUrl" id="downloadLink" download>click here</a> to download the file manually.
</p>

<form target="downloadFrame" action="@downloadLink" method="post" id="downloadForm" novalidate="">
    <input type="hidden" name="_" value="@ViewBag.ProtectedPassword"/>
</form>

<iframe src="about:blank" name="downloadFrame" style="visibility: hidden;"></iframe>

@section scripts {
    @if (Model.IsPasswordProtected == false) {
        <script>
            (function() {
                // Replace URL for easy copying
                if ('replaceState' in history) {
                    history.replaceState({}, null, '@JavaScriptEncoder.Default.Encode(downloadLink)');
                }
            })();
        </script>
    }
    else {
        <script>
            (function() {
                function downloadFileManually() {
                    // Manually submit form in top-level window
                    const form = document.getElementById('downloadForm');
                    form.target = '_top';
                    form.submit();
                }

                document.getElementById('downloadLink').addEventListener('click', function(ev) {
                    ev.preventDefault();

                    downloadFileManually();
                });
            })();
        </script>
    }

    <script>
        (function() {
            document.getElementById('downloadLink').addEventListener('click', function() {
                document.getElementById('downloadLinkContainer').style.visibility = 'hidden';
            });

            document.getElementById('downloadForm').submit();
        })();
    </script>
}