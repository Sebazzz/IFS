@using System.Text.Encodings.Web
@using Humanizer
@using IFS.Web.Core.Upload
@using Microsoft.Extensions.Options
@model UploadModel
@inject IOptions<FileStoreOptions> FileStoreOptions

@{
    ViewBag.Title = "Upload selector";
}

<div id="upload-root">
    <ifs-page-title>@ViewBag.Title</ifs-page-title>

    @if (Model!.IsReservation == false) {
        <p>
            Need to share a file over the internet? Upload it here. You will receive a unique url that you can send via e-mail or instant messaging to anyone who needs to download the file.
        </p>
    } else {
        <p>
            Please upload the file you want to share here. After the upload your will receive a hyperlink your can share.
        </p>

        if (Model.Sender != null) {
             string? name = String.IsNullOrEmpty(Model.Sender.Name) ? Model.Sender.EmailAddress : Model.Sender.Name;
             bool nameOnly = !String.IsNullOrEmpty(Model.Sender.EmailAddress);

             <p>
                 This file upload has been request by
                 @if (nameOnly) {
                     @name
                 } else {
                     <a href="mailto:@Model.Sender.EmailAddress">@name</a>
                 } and after the upload the file will be available to him/her.
             </p>
         }
    }

    <div class="alert alert-info">
        <strong>Maximum file size: </strong> @FileStoreOptions.Value.MaximumFileSize.Megabytes().ToString("MB")
    </div>

    <form asp-route="AsyncUploadHandler"
          asp-route-fileidentifier="@Model.FileIdentifier"
          asp-antiforgery="false"
          target="uploadFrame"
          enctype="multipart/form-data" method="post">
        <input asp-for="FileIdentifier" type="hidden" />
        <input asp-for="SuggestedFileSize" type="hidden" />
        <input asp-for="IsReservation" type="hidden" />
        
        <div class="ordered-form">
            @{
                await Html.RenderPartialAsync(Model.IsReservation == false ? "_UploadForm.Full" : "_UploadForm.Reservation", Model);
            }
        </div>

        <div class="mb-3">
            <p>
                <button class="btn btn-primary">
                    <span class="fa-solid fa-upload"></span> Upload
                </button>
            </p>
        </div>
    </form>
</div>

<iframe name="uploadFrame" id="uploadFrame" style="display:none"></iframe>

<div class="hidden" id="upload-done">
    <div class="alert alert-info">
        <strong>Done!</strong> Redirecting you to the results...
    </div>
</div>

<div class="hidden" id="upload-error">
    <h2>Upload failed</h2>

    <div class="alert alert-danger">
        <strong>Oops...</strong> It appears something has gone terribly wrong with the upload
    </div>

    <p>
        Please check whether the file you're trying to upload isn't too large.
    </p>

    <p>
        <button class="btn btn-primary reload-button" type="button">Try again</button>
    </p>
</div>

@section scripts {
    <script>
        window.uploadParameters = {
            trackerUrl: '@JavaScriptEncoder.Default.Encode(Url.RouteUrl("UploadTracker", new { fileIdentifier = Model.FileIdentifier })!)',
            names: {
                suggestedFileSize: '@Html.NameFor(x => x.SuggestedFileSize)'
            },
            ids: {
                nameField: '@Html.IdFor(x => x.Sender!.Name)',
                emailAddressField: '@Html.IdFor(x => x.Sender!.EmailAddress)'
            }
        };
    </script>
    <script src="~/build/upload/index.js" asp-append-version="true"></script>
}